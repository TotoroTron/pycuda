Traceback (most recent call last):
  File "/home/bcheng/workspace/dev/pycuda/cuda/ex4/main.py", line 39, in <module>
    main()
  File "/home/bcheng/workspace/dev/pycuda/cuda/ex4/main.py", line 32, in main
    tb_squares.test_all()
  File "/home/bcheng/workspace/dev/pycuda/cuda/ex4/testbench.py", line 49, in test_all
    result = instance.run()
             ^^^^^^^^^^^^^^
  File "/home/bcheng/workspace/dev/pycuda/cuda/ex4/matmul.py", line 28, in run
    self._dot()
  File "/home/bcheng/workspace/dev/pycuda/cuda/ex4/matmul.py", line 82, in _dot
    self._C[:] = self.__dot_kernel(self._A, self._B, self._C)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bcheng/workspace/tools/anaconda3/envs/pycuda/lib/python3.12/site-packages/numba/core/dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "/home/bcheng/workspace/tools/anaconda3/envs/pycuda/lib/python3.12/site-packages/numba/core/dispatcher.py", line 409, in error_rewrite
    raise e.with_traceback(None)
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
No implementation of function Function(<built-in function dot>) found for signature:
 
 >>> dot(array(float32, 2d, C), array(float32, 2d, C), out=array(float32, 2d, C))
 
There are 4 candidate implementations:
  - Of which 2 did not match due to:
  Overload in function 'dot_2': File: numba/np/linalg.py: Line 525.
    With argument(s): '(array(float32, 2d, C), array(float32, 2d, C), out=array(float32, 2d, C))':
   Rejected as the implementation raised a specific error:
     TypingError: got an unexpected keyword argument 'out'
  raised from /home/bcheng/workspace/tools/anaconda3/envs/pycuda/lib/python3.12/site-packages/numba/core/typing/templates.py:784
  - Of which 2 did not match due to:
  Overload in function 'dot_3': File: numba/np/linalg.py: Line 784.
    With argument(s): '(array(float32, 2d, C), array(float32, 2d, C), out=array(float32, 2d, C))':
   Rejected as the implementation raised a specific error:
     LoweringError: Failed in nopython mode pipeline (step: native lowering)
   scipy 0.16+ is required for linear algebra
   
   File "../../../../tools/anaconda3/envs/pycuda/lib/python3.12/site-packages/numba/np/linalg.py", line 817:
               def codegen(context, builder, sig, args):
                   <source elided>
   
           return lambda left, right, out: _impl(left, right, out)
           ^
   
   During: lowering "$16call.5 = call $8load_deref.1(left, right, out, func=$8load_deref.1, args=[Var(left, linalg.py:817), Var(right, linalg.py:817), Var(out, linalg.py:817)], kws=(), vararg=None, varkwarg=None, target=None)" at /home/bcheng/workspace/tools/anaconda3/envs/pycuda/lib/python3.12/site-packages/numba/np/linalg.py (817)
  raised from /home/bcheng/workspace/tools/anaconda3/envs/pycuda/lib/python3.12/site-packages/numba/core/errors.py:874

During: resolving callee type: Function(<built-in function dot>)
During: typing of call at /home/bcheng/workspace/dev/pycuda/cuda/ex4/matmul.py (76)


File "matmul.py", line 76:
    def __dot_kernel(A, B, C): # private method (double underscore prefix)
        <source elided>
        # return np.dot(A, B) # this allocates new memory for C
        np.dot(A, B, out=C) # Modify C in-place
        ^

