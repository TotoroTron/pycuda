Traceback (most recent call last):
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/consts.py", line 68, in _do_infer
    const = defn.infer_constant()
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/ir.py", line 562, in infer_constant
    raise ConstantInferenceError('%s' % self, loc=self.loc)
numba.errors.ConstantInferenceError: getattr(value=$22.10, attr=sine)

File "gpuinfo.py", line 42:
def do_something(data):
    <source elided>
    if idx < data.size:
        data[idx] = 2 * np.sqrt(data[idx]) + 0.5 * np.sine(data[idx]) + 0.25 * np.cos(data[idx])
        ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "gpuinfo.py", line 85, in <module>
    main()
  File "gpuinfo.py", line 52, in main
    do_something[16, 16](d_data) # arbitrary block and grid sizes, just force a compile
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/cuda/compiler.py", line 798, in __call__
    kernel = self.specialize(*args)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/cuda/compiler.py", line 809, in specialize
    kernel = self.compile(argtypes)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/cuda/compiler.py", line 825, in compile
    **self.targetoptions)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler_lock.py", line 32, in _acquire_compile_lock
    return func(*args, **kwargs)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/cuda/compiler.py", line 61, in compile_kernel
    cres = compile_cuda(pyfunc, types.void, args, debug=debug, inline=inline)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler_lock.py", line 32, in _acquire_compile_lock
    return func(*args, **kwargs)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/cuda/compiler.py", line 50, in compile_cuda
    locals={})
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler.py", line 551, in compile_extra
    return pipeline.compile_extra(func)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler.py", line 331, in compile_extra
    return self._compile_bytecode()
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler.py", line 393, in _compile_bytecode
    return self._compile_core()
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler.py", line 373, in _compile_core
    raise e
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler.py", line 364, in _compile_core
    pm.run(self.state)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler_machinery.py", line 347, in run
    raise patched_exception
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler_machinery.py", line 338, in run
    self._runPass(idx, pass_inst, state)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler_lock.py", line 32, in _acquire_compile_lock
    return func(*args, **kwargs)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler_machinery.py", line 302, in _runPass
    mutated |= check(pss.run_pass, internal_state)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/compiler_machinery.py", line 275, in check
    mangled = func(compiler_state)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/untyped_passes.py", line 237, in run_pass
    rewrites.rewrite_registry.apply('before-inference', state)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/rewrites/registry.py", line 70, in apply
    state.calltypes)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/rewrites/ir_print.py", line 21, in match
    callee = func_ir.infer_constant(expr.func)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/ir.py", line 1400, in infer_constant
    return self._consts.infer_constant(name)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/consts.py", line 34, in infer_constant
    self._cache[name] = (True, self._do_infer(name))
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/consts.py", line 71, in _do_infer
    return self._infer_expr(defn)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/consts.py", line 82, in _infer_expr
    return self._infer_getattr(value, expr)
  File "/home/bbc33/anaconda3/envs/pycuda/lib/python3.6/site-packages/numba/consts.py", line 116, in _infer_getattr
    return getattr(value, expr.attr)
AttributeError: Failed in nopython mode pipeline (step: nopython rewrites)
module 'numpy' has no attribute 'sine'
